{"version":3,"sources":["frontend.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["(function($) {\n    'use strict';\n\n    // Hero Block Frontend functionality\n    const BlacksmithHero = {\n        init: function() {\n            this.bindEvents();\n            this.optimizeVideoLoad();\n        },\n\n        bindEvents: function() {\n            $(document).ready(this.onReady.bind(this));\n            $(window).on('load', this.onLoad.bind(this));\n            $(window).on('resize', this.onResize.bind(this));\n        },\n\n        onReady: function() {\n            this.initHeroBlocks();\n        },\n\n        onLoad: function() {\n            this.optimizeVideoPlayback();\n        },\n\n        onResize: function() {\n            this.handleResponsiveVideo();\n        },\n\n        initHeroBlocks: function() {\n            $('.blacksmith-hero-wrapper').each(function() {\n                const $hero = $(this);\n                BlacksmithHero.setupHeroBlock($hero);\n                \n                // Debug logging\n                if ($hero.hasClass('hero-bg-video')) {\n                    console.log('Blacksmith Hero: Video background detected', $hero);\n                }\n            });\n        },\n\n        setupHeroBlock: function($hero) {\n            if ($hero.hasClass('hero-bg-video')) {\n                this.setupVideoBackground($hero);\n            }\n        },\n\n        setupVideoBackground: function($hero) {\n            const $iframe = $hero.find('iframe');\n            \n            if ($iframe.length) {\n                // Ensure video is properly positioned\n                this.positionVideo($iframe);\n                \n                // Add loading state\n                $hero.addClass('video-loading');\n                \n                // Remove loading state when video is ready\n                $iframe.on('load', function() {\n                    $hero.removeClass('video-loading').addClass('video-loaded');\n                    \n                    // Attempt to start video playback after load\n                    setTimeout(() => {\n                        BlacksmithHero.attemptVideoPlay($(this));\n                    }, 1000);\n                });\n                \n                // Handle iframe errors\n                $iframe.on('error', function() {\n                    console.warn('Hero video failed to load');\n                    $hero.removeClass('video-loading').addClass('video-error');\n                });\n            }\n        },\n\n        attemptVideoPlay: function($iframe) {\n            try {\n                // Send play command to YouTube iframe\n                $iframe[0].contentWindow.postMessage('{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*');\n            } catch (e) {\n                console.warn('Could not control video playback:', e);\n            }\n        },\n\n        positionVideo: function($iframe) {\n            const updateVideoSize = () => {\n                const windowWidth = $(window).width();\n                const windowHeight = $(window).height();\n                const aspectRatio = 16 / 9;\n                \n                let videoWidth, videoHeight;\n                \n                if (windowWidth / windowHeight > aspectRatio) {\n                    videoWidth = windowWidth + 400;\n                    videoHeight = videoWidth / aspectRatio;\n                } else {\n                    videoHeight = windowHeight + 400;\n                    videoWidth = videoHeight * aspectRatio;\n                }\n                \n                $iframe.css({\n                    width: videoWidth + 'px',\n                    height: videoHeight + 'px'\n                });\n            };\n            \n            updateVideoSize();\n            $(window).on('resize.heroVideo', updateVideoSize);\n        },\n\n        optimizeVideoLoad: function() {\n            // Intersection Observer for lazy loading videos\n            if ('IntersectionObserver' in window) {\n                const videoObserver = new IntersectionObserver((entries) => {\n                    entries.forEach(entry => {\n                        if (entry.isIntersecting) {\n                            const $hero = $(entry.target);\n                            this.loadVideo($hero);\n                            videoObserver.unobserve(entry.target);\n                        }\n                    });\n                });\n\n                $('.blacksmith-hero-wrapper.hero-bg-video').each(function() {\n                    videoObserver.observe(this);\n                });\n            }\n        },\n\n        loadVideo: function($hero) {\n            const $iframe = $hero.find('iframe');\n            if ($iframe.length && !$iframe.attr('data-loaded')) {\n                $iframe.attr('data-loaded', 'true');\n                // Video will auto-load due to src already being set\n            }\n        },\n\n        optimizeVideoPlayback: function() {\n            // Pause videos when tab is not visible\n            $(document).on('visibilitychange', function() {\n                const $videos = $('.blacksmith-hero-wrapper.hero-bg-video iframe');\n                \n                if (document.hidden) {\n                    $videos.each(function() {\n                        try {\n                            this.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n                        } catch (e) {\n                            // Silently fail if unable to control video\n                        }\n                    });\n                } else {\n                    $videos.each(function() {\n                        try {\n                            this.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*');\n                        } catch (e) {\n                            // Silently fail if unable to control video\n                        }\n                    });\n                }\n            });\n        },\n\n        handleResponsiveVideo: function() {\n            $('.blacksmith-hero-wrapper.hero-bg-video iframe').each(function() {\n                BlacksmithHero.positionVideo($(this));\n            });\n        }\n    };\n\n    // Initialize when DOM is ready\n    BlacksmithHero.init();\n\n})(jQuery);"]}